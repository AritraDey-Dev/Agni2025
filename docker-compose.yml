version: '3.8'

services:
  database:
    image: mysql:8.0.36
    container_name: mysql_db
    env_file:
      - backend/.env
    networks:
      - app_network
    ports:
      - "3307:3306"  # Host port mapped to container port 3306
    volumes:
      - mysql-data:/var/lib/mysql
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--port=3306"]
      interval: 30s
      timeout: 10s
      retries: 5
    extra_hosts:
      - "host.docker.internal:host-gateway"  # This allows the container to reference the host

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    container_name: backend_app
    env_file:
      - backend/.env  # This will load environment variables from the .env file
    networks:
      - app_network
    depends_on:
      - database
    ports:
      - "4004:4004"  # Expose backend on port 4000
    restart: unless-stopped
    command: >
      sh -c "
        echo 'Running prisma migrate deploy...' &&
        npx prisma migrate deploy &&
        echo 'Starting backend app...' &&
        npm run start
      "
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Reference host from container

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    container_name: frontend_app
    env_file:
      - frontend/.env  # This will load environment variables from the .env file
    networks:
      - app_network
    ports:
      - "5173:5173"  # Expose frontend on port 3000
    restart: unless-stopped
    command: sh -c "npm run dev"
    extra_hosts:
      - "host.docker.internal:host-gateway" 
     # Reference host from container

volumes:
  mysql-data:

networks:
  app_network:
    driver: bridge
